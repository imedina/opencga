apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.master.name }}
  labels:
    {{- include "opencga.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.master.replicaCount }}
  strategy:
    # Recreate master instead of rolling update.
    # Small downtime in the master is better than having two master running concurrently, even if it's for a few seconds
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Values.master.name }}
      {{- include "opencga.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ .Values.master.name }}
        confMd5: {{ .Values.confMd5 | default "NA" | quote }}
        {{- include "opencga.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.master.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ .Values.master.name }}
      securityContext:
        {{- toYaml .Values.master.podSecurityContext | nindent 8 }}
      initContainers:
      - name: {{ .Values.init.name }}
        securityContext:
          {{- toYaml .Values.init.securityContext | nindent 12 }}
        image: {{ tpl .Values.init.image.repository . | quote }}
        imagePullPolicy: {{ .Values.init.image.pullPolicy }}
        resources:
          {{- toYaml .Values.init.resources | nindent 12 }}
        env:
        - name: "OVERWRITE_CONFIGURATION"
          value: "{{ .Values.init.configuration.overwrite }}"
        - name:  "INIT_OPENCGA_PASS"
          valueFrom:
            secretKeyRef:
              name: {{ include "opencga.secretName" . }}
              key: openCgaAdminPassword
        - name:  "INIT_HEALTH_CHECK_INTERVAL"
          value: "30"
        - name: "INIT_VARIANT_DEFAULT_ENGINE"
          value: hadoop
        - name: "INIT_HADOOP_SSH_DNS"
          value: {{ .Values.hadoop.sshDns  }} 
        - name: "INIT_HADOOP_SSH_USER"
          value: {{ .Values.hadoop.sshUsername  }} 
        - name: "INIT_HADOOP_SSH_PASS"
          valueFrom:
            secretKeyRef:
              name: {{ include "opencga.secretName" . }}
              key: hdInsightSshPassword
        - name: "INIT_HADOOP_SSH_REMOTE_OPENCGA_HOME"
          value:  "/home/{{ .Values.hadoop.sshUsername  }}/opencga/"
        - name: "INIT_SEARCH_HOSTS"
          value: {{ include "solrHosts" . | quote  }}
        - name: "INIT_CATALOG_SEARCH_HOSTS"
          value: {{ include "solrHosts" . | quote }}
        - name: "INIT_CLINICAL_HOSTS"
          value: {{ include "solrHosts" . | toString | quote }}
        - name: "INIT_CATALOG_DATABASE_HOSTS"
          value: {{ include "mongodb.hosts" .  | quote }}
        - name: "INIT_CATALOG_DATABASE_USER"
          value:  {{ .Values.mongodb.user  }}
        - name: "INIT_CATALOG_DATABASE_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: {{ include "opencga.secretName" . }}
              key: mongoDbPassword
        - name: "INIT_CATALOG_DATABASE_SSL"
          value: {{ .Values.mongodb.ssl | toString | quote }}
        - name: "INIT_CATALOG_DATABASE_REPLICA_SET"
          value: {{ include "mongodb.replicaSet" . | toString | quote }}
        - name: "INIT_CATALOG_DATABASE_AUTHENTICATION_MECHANISM"
          value: {{ .Values.mongodb.authenticationMechanism  }}
        - name: "INIT_CATALOG_DATABASE_AUTHENTICATION_DATABASE"
          value: {{ .Values.mongodb.authenticationDatabase  }}
        - name: "INIT_REST_HOST"
          value:   "http://{{ .Values.rest.name }}/opencga"
        - name: "INIT_GRPC_HOST"
          value:   {{ .Values.grpc.name }}
        - name: "INIT_CELLBASE_REST_URL"
          value: {{ .Values.cellbase.host  | toString   | quote }}
        - name: "INIT_CELLBASE_VERSION"
          value: {{ .Values.cellbase.version  | toString   | quote }}
        - name: "INIT_K8S_MASTER_NODE"
          value: {{ .Values.analysis.execution.options.k8s.masterNode }}
        - name: "INIT_K8S_NAMESPACE"
          value: {{ .Release.Namespace }}
        - name: "INIT_K8S_IMAGE_NAME"
          value: {{ tpl .Values.master.image.repository . | quote }}
        - name: "INIT_K8S_VOLUMES_PVC_CONF"
          value: {{ include "pvcConf" . | quote }}
        - name: "INIT_K8S_VOLUMES_PVC_SESSIONS"
          value: {{ include "pvcSessions" . | quote }}
        - name: "INIT_K8S_VOLUMES_PVC_VARIANTS"
          value: {{ include "pvcVariants" . | quote }}
        - name: "INIT_K8S_VOLUMES_PVC_ANALYSISCONF"
          value: {{ include "pvcAnalysisconf" . | quote }}
        - name: "INIT_ANALYSIS_EXECUTION_MODE"
          value: {{ .Values.analysis.execution.id | quote }}
        volumeMounts:
          - name: default-conf
            mountPath: /opt/opencga/default-conf
          - name : conf
            mountPath: /opt/volume/conf
          - name : analysisconf
            mountPath: /opt/volume/analysis
          - name : sessions
            mountPath: /opt/opencga/sessions
    {{- with .Values.init.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.init.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.init.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      
      containers:
        - name: {{ .Values.master.name }}
          securityContext:
            {{- toYaml .Values.master.securityContext | nindent 12 }}
          image: {{ tpl .Values.master.image.repository . | quote }}
          imagePullPolicy: {{ .Values.master.image.pullPolicy }}
          command: ["/bin/sh"]
          args: 
          - "-c"
          - "echo $PASSWORD | /opt/opencga/bin/opencga-admin.sh catalog daemon --start "
          env:
          - name:  "PASSWORD"
            valueFrom:
              secretKeyRef:
                name: {{ include "opencga.secretName" . }}
                key: openCgaAdminPassword
          resources:
            {{- toYaml .Values.master.resources | nindent 12 }}
          volumeMounts:
            - name : conf
              mountPath: /opt/opencga/conf
            - name : sessions
              mountPath: /opt/opencga/sessions
            - name : variants
              mountPath: /opt/opencga/variants
            - name : analysisconf
              mountPath: /opt/opencga/analysis
            {{ include "additionalVolumeMounts" . | nindent 12 }}
      volumes:
      - name: conf
        persistentVolumeClaim:
          claimName: {{ include "pvcConf" . | quote }}
      - name: sessions
        persistentVolumeClaim:
          claimName: {{ include "pvcSessions" . | quote }}
      - name: variants
        persistentVolumeClaim:
          claimName: {{ include "pvcVariants" . | quote }}
      - name: analysisconf
        persistentVolumeClaim:
          claimName: {{ include "pvcAnalysisconf" . | quote }}
      - name: default-conf
        configMap:
          name: {{ include "opencga.defaultConf.name" . }}
      {{ include "additionalVolumes" . | nindent 6 }}
    {{- with .Values.master.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.master.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.master.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
